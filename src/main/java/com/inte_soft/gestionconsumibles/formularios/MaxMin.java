/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.inte_soft.gestionconsumibles.formularios;

import com.inte_soft.gestionconsumibles.controller.PedidoConsumiblesController;
import com.inte_soft.gestionconsumibles.dto.MaxMinElectDTO;
import com.inte_soft.gestionconsumibles.util.WindowSingleton;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author alejo
 */
public class MaxMin extends javax.swing.JInternalFrame {

    private PedidoConsumiblesController pedidoConsumiblesController;
    private DefaultTableModel model;

    private TableRowSorter<DefaultTableModel> sorter;
    private String tipo;
    private WindowSingleton windowSingleton;

    /**
     * Creates new form MaxMin
     */
    public MaxMin() {
        initComponents();

    }

    public MaxMin (String tipo, WindowSingleton windowSingleton){
        initComponents();
        this.tipo = tipo;
        this.pedidoConsumiblesController = new PedidoConsumiblesController();
        this.sorter = new TableRowSorter<>(this.model);
        modelarTabla();
        if (this.tipo == "Electricos") {
            cargarTablaElectricos();
        } else if (this.tipo == "Mecanicos") {
            cargarTablaMecanicos();
        }
        this.windowSingleton = windowSingleton;
    }

    @Override
    public void dispose(){
        super.dispose();
        this.windowSingleton.setCloseWindow();
    }


    public void cargarTablaElectricos() {
        List<MaxMinElectDTO> ListMaxMinElectDTO = pedidoConsumiblesController.consumiblesElectricosMaxMinList();
        for (MaxMinElectDTO maxMinElectDTO : ListMaxMinElectDTO) {
            this.model.addRow(
                    new Object[]{
                        maxMinElectDTO.getCodigo(),
                        maxMinElectDTO.getDescripcion(),
                        maxMinElectDTO.getMin(),
                        maxMinElectDTO.getMax()});
        }

    }

    public void cargarTablaMecanicos() {
        List<MaxMinElectDTO> ListMaxMinElectDTO = pedidoConsumiblesController.consumiblesMecanicosMaxMinList();
        for (MaxMinElectDTO maxMinElectDTO : ListMaxMinElectDTO) {
            this.model.addRow(
                    new Object[]{
                        maxMinElectDTO.getCodigo(),
                        maxMinElectDTO.getDescripcion(),
                        maxMinElectDTO.getMin(),
                        maxMinElectDTO.getMax()});
        }

    }

    public void modelarTabla() {
        this.model = (DefaultTableModel) this.jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonActualizar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Cantidad Minima", "Cantidad Maxima"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jButtonActualizar)
                .addGap(45, 45, 45)
                .addComponent(jButtonCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonCancelar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // metodo para cerrar la ventana
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // metodo para tomar los datos de la tabla y actualizarlos en la base de datos
        int filas = this.jTable1.getRowCount();
        List<MaxMinElectDTO> listMaxMinElectDTO = new ArrayList<>();

        for (int i = 0; i < filas; i++) {
            MaxMinElectDTO maxMinElectDTO = new MaxMinElectDTO();

            String codigo = (String) this.jTable1.getValueAt(i, 0);
            Integer min = null;
            Integer max = null;
            if (this.jTable1.getValueAt(i, 2) == null || this.jTable1.getValueAt(i, 3) == null) {
                min = 0;
                max = 0;
            } else {
                min = Integer.parseInt(this.jTable1.getValueAt(i, 2).toString());
                max = Integer.parseInt(this.jTable1.getValueAt(i, 3).toString());
                if (min > max) {
                    JOptionPane.showMessageDialog(null, "La cantidad minima no puede ser mayor a la cantidad maxima en " + codigo, "Advertencia", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
            maxMinElectDTO.setCodigo(codigo);
            maxMinElectDTO.setMin(min);
            maxMinElectDTO.setMax(max);
            listMaxMinElectDTO.add(maxMinElectDTO);

        }
        if (tipo == "Electricos") {
            this.pedidoConsumiblesController.updateMaxMin(listMaxMinElectDTO);
        } else if (tipo == "Mecanicos") {
            this.pedidoConsumiblesController.updateMaxMinMecanicos(listMaxMinElectDTO);
        }
        JOptionPane.showMessageDialog(null, "Se actualizaron los datos correctamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }//GEN-LAST:event_jButtonActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
