/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.inte_soft.gestionconsumibles.formularios;

import com.inte_soft.gestionconsumibles.controller.ItemController;
import com.inte_soft.gestionconsumibles.controller.OtController;
import com.inte_soft.gestionconsumibles.entity.Item;
import com.inte_soft.gestionconsumibles.entity.Ot;
import com.inte_soft.gestionconsumibles.util.WindowSingleton;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 *
 * @author Usuario
 */
public class otsProgramadas extends javax.swing.JInternalFrame {

    private DefaultTableModel model;
    private OtController otController;
    private WindowSingleton windowSingleton;
    private ItemController itemController;
    private List<Item> items = new ArrayList<>();
    private TableRowSorter<DefaultTableModel> sorter;
    private Item item;
    /**
     * Creates new form otsProgramadas
     */
    public otsProgramadas(WindowSingleton windowSingleton) {
        initComponents();
        this.windowSingleton = windowSingleton;
        this.otController = new OtController();
        this.itemController = new ItemController();
        this.model = modelarTabla(jTable1);
        loadOts();
        jButtonGuardar.setVisible(Boolean.FALSE);
        jCalendarioActualizar.setVisible(Boolean.FALSE);

    }

    public DefaultTableModel modelarTabla(JTable jTable){
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        jTable.setModel(model);
        jTable.setAutoCreateRowSorter(true);
        sorter = new TableRowSorter<>(model);
        jTable.setRowSorter(sorter);
        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jCalendarioActualizar = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextBuscar2 = new javax.swing.JTextField();
        jButtonModificar = new javax.swing.JButton();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jButtonGuardar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Obras programadas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "OT", "ITEM", "FECHA PROGRAMADA", "CIERRE OT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setMinWidth(100);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(150);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(500);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(300);
        }

        jLabel1.setText("OT:");

        jButton1.setText("Agregar OT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha Programada:");

        jButton2.setText("Cerrar OTÂ´s");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Item");

        jLabel4.setText("Buscar:");

        jTextBuscar2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextBuscar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextBuscar2KeyReleased(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.setMinimumSize(new java.awt.Dimension(95, 32));
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jTextBuscar2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCalendarioActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(jLabel4)
                        .addComponent(jTextBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCalendarioActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jButtonGuardar)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void dispose() {
        super.dispose();
        windowSingleton.setCloseWindow();
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(this.jTextField1.getText().isEmpty() || this.jCalendarioActualizar.getDate() == null || this.jTextField2.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar todos los campos");
        }else if(this.jTextField1.getText().length() != 5) {
            JOptionPane.showMessageDialog(null, "El numero de OT debe tener 5 digitos");

        }else  {
            String item = null;
            try {
                item = this.jTextField2.getText();
                Boolean withDot = false;
                Integer integer1 = 0;
                Integer integer2 = 0;
                if(item.contains(".")){
                    try {
                        integer1 = Integer.parseInt(item.split("\\.")[0]);
                        if (item.contains(".")) {
                            integer2 = Integer.parseInt(item.split("\\.")[1]);
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "El item debe ser numerico");
                        return;
                    }
                    withDot = true;
                }else if (item.contains(",")){
                    JOptionPane.showMessageDialog(null, "El item debe ser numerico de este formato: 00.00 ");
                    return;
                }
                if(item.isBlank()){
                    JOptionPane.showMessageDialog(null, "Debe ingresar un item");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "El item debe ser numerico");
                return;
            }

            Ot ot = this.otController.createOt(
                    new Ot(
                            (this.jTextField1.getText()),
                            false,
                            false));
            Item item1 = new Item();
            item1.setItem(item);
            item1.setOt(ot);
            item1.setCerrado(false);
            item1.setAlistado(false);
            item1.setEntrega(this.jCalendarioActualizar.getDate());
            this.itemController.createItem(item1);

            loadOts();
            this.jTextField1.setText("");
            this.jCalendarioActualizar.setDate(null);
            this.jTextField2.setText("");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int contador = 0;
        for(int i = 0; i < this.jTable1.getRowCount(); i++){
            if((Boolean) this.jTable1.getValueAt(i, 4)){
                int confirm = JOptionPane.showConfirmDialog(null, "Â¿Desea cerrar la OT " + this.jTable1.getValueAt(i, 1) + "?");
                if(confirm == JOptionPane.NO_OPTION || confirm == JOptionPane.CANCEL_OPTION){
                    return;
                }else{
                    contador++;
                    Item item = items.get(i);
                    item.setCerrado(true);
                    this.itemController.updateItem(item);
            }
            }
            
        }
        if (contador == 0){
                JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una OT");
            }
            loadOts();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextBuscar2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBuscar2KeyReleased
        filterTable();
    }//GEN-LAST:event_jTextBuscar2KeyReleased

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        int row = this.jTable1.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una OT");
        }else{
            item = new Item();
            item.setId((Integer) this.jTable1.getValueAt(row, 0));
            item.setOt(items.stream().filter(ot -> ot.getId() == item.getId()).findFirst().get().getOt());
            item.setItem((String) this.jTable1.getValueAt(row, 2));
            item.setEntrega((Date) this.jTable1.getValueAt(row, 3));
            item.setCerrado(items.stream().filter(ot -> ot.getId() == item.getId()).findFirst().get().getCerrado());
            item.setAlistado(items.stream().filter(ot -> ot.getId() == item.getId()).findFirst().get().getAlistado());
            jButtonGuardar.setVisible(Boolean.TRUE);
            jCalendarioActualizar.setVisible(Boolean.TRUE);
        }

    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        if(this.jCalendarioActualizar.getDate() == null){
            JOptionPane.showMessageDialog(null, "Debe ingresar una fecha");
        }else{
            item.setEntrega(this.jCalendarioActualizar.getDate());
            this.itemController.updateItem(item);
            loadOts();
            jButtonGuardar.setVisible(Boolean.FALSE);
            jCalendarioActualizar.setVisible(Boolean.FALSE);
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    public void filterTable(){
        String text = jTextBuscar2.getText();
        if (text.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }
    }
    public void loadOts(){
        items = this.itemController.getItems();
        this.model.setRowCount(0);
        for(Item item : items){
            this.model.addRow(new Object[]{
                    item.getId(),
                    item.getOt().getOt(),
                    item.getItem(),
                    item.getEntrega(),
                    item.getCerrado()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonModificar;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jCalendarioActualizar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextBuscar2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
