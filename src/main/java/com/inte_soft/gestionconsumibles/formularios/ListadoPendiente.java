/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.inte_soft.gestionconsumibles.formularios;

import com.inte_soft.gestionconsumibles.controller.PedidoConsumiblesController;
import com.inte_soft.gestionconsumibles.dto.ConsumiblesDtoOt;
import com.inte_soft.gestionconsumibles.entity.Ot;
import com.inte_soft.gestionconsumibles.entity.Usuarios;
import com.inte_soft.gestionconsumibles.util.JTablePrinter;
import com.inte_soft.gestionconsumibles.util.ModelarTabla;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.List;

/**
 *
 * @author Usuario
 */
public class ListadoPendiente extends javax.swing.JDialog {

    private List<ConsumiblesDtoOt> consumiblesDtoOts;
    private Usuarios usuarios;
    private DefaultTableModel model;
    private ModelarTabla modelarTabla;
    private List<String> listItem;
    private PedidoConsumiblesController pedidoConsumiblesController;
    private Ot ot;
    private String area;

    
    /**
     * Creates new form listadoPendiente
     */
    public ListadoPendiente() {
        initComponents();
    }
    
    public ListadoPendiente(Usuarios usuarios, List<String> listItem, String area, Ot ot){
        this.pedidoConsumiblesController = new PedidoConsumiblesController();
        initComponents();
        this.usuarios = usuarios;
        modelarTabla = new ModelarTabla(tbListadoConsumibles);
        model = modelarTabla.getModel();
        this.listItem = listItem;
        this.ot = ot;
        this.area = area;
        loadConsumibles();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbListadoConsumibles = new javax.swing.JTable();
        jTextSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setTitle("Consumibles");
        setVisible(true);

        tbListadoConsumibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripci√≥n", "Tipo", "Referencia", "Marca", "Unidad", "Cant", "Maximos", "Minimos", "Alistado", "Pendiente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbListadoConsumibles);

        jTextSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextSearchKeyReleased(evt);
            }
        });

        jLabel2.setText("Busqueda");

        jButton1.setText("Diligenciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181)
                .addComponent(jButton1)
                .addGap(79, 79, 79)
                .addComponent(jButton2)
                .addContainerGap(634, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(501, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(50, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadConsumibles(){
        this.consumiblesDtoOts = this.pedidoConsumiblesController.getConsumiblesByOtAndItem(ot, listItem,area );;
        model.setRowCount(0);
        for (ConsumiblesDtoOt consumiblesDtoOt : consumiblesDtoOts) {
            model.addRow(new Object[]{
                consumiblesDtoOt.getCodigo(),
                consumiblesDtoOt.getDescripcion(),
                consumiblesDtoOt.getTipo(),
                consumiblesDtoOt.getReferencia(),
                consumiblesDtoOt.getMarca(),
                consumiblesDtoOt.getUnidad(),
                consumiblesDtoOt.getCantidad(),
                consumiblesDtoOt.getMax(),
                consumiblesDtoOt.getMin(),
                consumiblesDtoOt.getAlistado(),
                consumiblesDtoOt.getCantidad() - consumiblesDtoOt.getAlistado(),
            });

        }
    }
    private void jTextSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchKeyReleased
        //imprimir tabla
        JTablePrinter jTablePrinter = new JTablePrinter();
        Date fecha = new Date();
        String header = "OT: " + this.ot + "     " + fecha;
        String footer = "Elabora: " + this.usuarios.getNombres() + " " + this.usuarios.getApellidos();
        jTablePrinter.printTable(tbListadoConsumibles, header, footer);
    }//GEN-LAST:event_jTextSearchKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(tbListadoConsumibles.getSelectedRow()>=0){
            // buscar consumibles filtrado por los item listitem
            String codigo = (String) tbListadoConsumibles.getValueAt(tbListadoConsumibles.getSelectedRow(), 0).toString();
            EntregaConsumibles entregaConsumibles = new EntregaConsumibles(usuarios, listItem, area, ot,codigo, this);
            entregaConsumibles.setVisible(true);
            entregaConsumibles.setLocationRelativeTo(null);
            entregaConsumibles.setModal(true);

        }else {
            JOptionPane.showMessageDialog(null, "Seleccione un consumible");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String items = "";
        for (String listItem1 : listItem) {
            items += listItem1 + ", ";
        }
        Date fecha = new Date();
        String header = "OT: " + this.ot.getOt() + " Items: " + items +"     " + fecha;
        String footer = "Elabora: " + this.usuarios.getNombres() + " " + this.usuarios.getApellidos();
        JTablePrinter jTablePrinter = new JTablePrinter();
        jTablePrinter.printTable(tbListadoConsumibles, header, footer);
        this.setModal(Boolean.FALSE);
        this.toFront();
    }//GEN-LAST:event_jButton2ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextSearch;
    private javax.swing.JTable tbListadoConsumibles;
    // End of variables declaration//GEN-END:variables
}
